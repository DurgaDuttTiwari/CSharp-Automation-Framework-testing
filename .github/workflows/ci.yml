name: CI Build and Test (Linux)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout Repository
        uses: actions/checkout@v3

      - name: 🧰 Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: 🔧 Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          sudo apt-get install -y google-chrome-stable || {
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
          }
          google-chrome --version

      - name: 🔧 Install ChromeDriver
        run: |
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+' | head -1)
          echo "Detected Chrome version: $CHROME_VERSION"
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
          wget -q -O chromedriver.zip "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
          unzip chromedriver.zip
          sudo mv chromedriver /usr/local/bin/chromedriver
          chromedriver --version

      - name: 🧪 Restore Dependencies
        run: dotnet restore

      - name: 🛠️ Build Project
        run: dotnet build --no-restore --configuration Release

      - name: 🧪 Run Tests with Reqnroll + NUnit
        run: dotnet test --no-build --configuration Release --logger "trx;LogFileName=test-results.trx"

      - name: 📂 Debug Report Path
        if: always()
        run: ls -R ReqnrollFirstTestProject/Reports/ || echo "No reports found"

      - name: 📤 Upload TRX Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: NUnit-TRX-Results
          path: '**/TestResults/*.trx'

      - name: 📤 Upload HTML Report (including screenshots)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: HTML-Test-Report
          path: '**/Reports/**'
